// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: offer_core_service/v1/api.proto

package offer_core_servicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "offer_core_service/validate"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OfferStatus_Value int32

const (
	// Default status value.
	OfferStatus_VALUE_UNSPECIFIED OfferStatus_Value = 0
	// Status representing a newly created offer.
	OfferStatus_VALUE_UPLOADED OfferStatus_Value = 1
	// Status representing an approved offer, ready to be displayed on the public API and included in the aggregated result.
	OfferStatus_VALUE_APPROVED OfferStatus_Value = 2
	// Status representing a disapporved offer, not to be displayed on the public API and included in the aggregated result.
	OfferStatus_VALUE_DISAPPROVED OfferStatus_Value = 3
)

// Enum value maps for OfferStatus_Value.
var (
	OfferStatus_Value_name = map[int32]string{
		0: "VALUE_UNSPECIFIED",
		1: "VALUE_UPLOADED",
		2: "VALUE_APPROVED",
		3: "VALUE_DISAPPROVED",
	}
	OfferStatus_Value_value = map[string]int32{
		"VALUE_UNSPECIFIED": 0,
		"VALUE_UPLOADED":    1,
		"VALUE_APPROVED":    2,
		"VALUE_DISAPPROVED": 3,
	}
)

func (x OfferStatus_Value) Enum() *OfferStatus_Value {
	p := new(OfferStatus_Value)
	*p = x
	return p
}

func (x OfferStatus_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OfferStatus_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_offer_core_service_v1_api_proto_enumTypes[0].Descriptor()
}

func (OfferStatus_Value) Type() protoreflect.EnumType {
	return &file_offer_core_service_v1_api_proto_enumTypes[0]
}

func (x OfferStatus_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OfferStatus_Value.Descriptor instead.
func (OfferStatus_Value) EnumDescriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{0, 0}
}

type OfferListSortOrder_Value int32

const (
	OfferListSortOrder_VALUE_UNSPECIFIED OfferListSortOrder_Value = 0
	// Sort offer by ascending created time first, ascending ID second.
	OfferListSortOrder_VALUE_CREATED_TIME_ASCENDING OfferListSortOrder_Value = 1
	// Sort offer by descending created time first, descending ID second.
	OfferListSortOrder_VALUE_CREATED_TIME_DESCENDING OfferListSortOrder_Value = 2
	// Sort offer by ascending company name first, ascending ID second.
	OfferListSortOrder_VALUE_COMPANY_ASCENDING OfferListSortOrder_Value = 3
	// Sort offer by descending company name first, descending ID second.
	OfferListSortOrder_VALUE_COMPANY_DESCENDING OfferListSortOrder_Value = 4
	// Sort offer by ascending country first, then ascending state, ascending city and ascending ID.
	OfferListSortOrder_VALUE_LOCATION_ASCENDING OfferListSortOrder_Value = 5
	// Sort offer by descending country first, then descending state, descending city and descending ID.
	OfferListSortOrder_VALUE_LOCATION_DESCENDING OfferListSortOrder_Value = 6
	// Sort offer by ascending position name first, ascending ID second.
	OfferListSortOrder_VALUE_POSITION_ASCENDING OfferListSortOrder_Value = 7
	// Sort offer by descending position name first, descending ID second.
	OfferListSortOrder_VALUE_POSITION_DESCENDING OfferListSortOrder_Value = 8
	// Sort offer by ascending currency name first, ascending amount second and aseconding ID last.
	OfferListSortOrder_VALUE_TOTAL_PACKAGE_ASCENDING OfferListSortOrder_Value = 9
	// Sort offer by descending currency name first, descending amount second and descending ID last.
	OfferListSortOrder_VALUE_TOTAL_PACKAGE_DESCENDING OfferListSortOrder_Value = 10
)

// Enum value maps for OfferListSortOrder_Value.
var (
	OfferListSortOrder_Value_name = map[int32]string{
		0:  "VALUE_UNSPECIFIED",
		1:  "VALUE_CREATED_TIME_ASCENDING",
		2:  "VALUE_CREATED_TIME_DESCENDING",
		3:  "VALUE_COMPANY_ASCENDING",
		4:  "VALUE_COMPANY_DESCENDING",
		5:  "VALUE_LOCATION_ASCENDING",
		6:  "VALUE_LOCATION_DESCENDING",
		7:  "VALUE_POSITION_ASCENDING",
		8:  "VALUE_POSITION_DESCENDING",
		9:  "VALUE_TOTAL_PACKAGE_ASCENDING",
		10: "VALUE_TOTAL_PACKAGE_DESCENDING",
	}
	OfferListSortOrder_Value_value = map[string]int32{
		"VALUE_UNSPECIFIED":              0,
		"VALUE_CREATED_TIME_ASCENDING":   1,
		"VALUE_CREATED_TIME_DESCENDING":  2,
		"VALUE_COMPANY_ASCENDING":        3,
		"VALUE_COMPANY_DESCENDING":       4,
		"VALUE_LOCATION_ASCENDING":       5,
		"VALUE_LOCATION_DESCENDING":      6,
		"VALUE_POSITION_ASCENDING":       7,
		"VALUE_POSITION_DESCENDING":      8,
		"VALUE_TOTAL_PACKAGE_ASCENDING":  9,
		"VALUE_TOTAL_PACKAGE_DESCENDING": 10,
	}
)

func (x OfferListSortOrder_Value) Enum() *OfferListSortOrder_Value {
	p := new(OfferListSortOrder_Value)
	*p = x
	return p
}

func (x OfferListSortOrder_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OfferListSortOrder_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_offer_core_service_v1_api_proto_enumTypes[1].Descriptor()
}

func (OfferListSortOrder_Value) Type() protoreflect.EnumType {
	return &file_offer_core_service_v1_api_proto_enumTypes[1]
}

func (x OfferListSortOrder_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OfferListSortOrder_Value.Descriptor instead.
func (OfferListSortOrder_Value) EnumDescriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{8, 0}
}

type OfferStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OfferStatus) Reset() {
	*x = OfferStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferStatus) ProtoMessage() {}

func (x *OfferStatus) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferStatus.ProtoReflect.Descriptor instead.
func (*OfferStatus) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{0}
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProfileImageUrl string `protobuf:"bytes,3,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *Company) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The 2-letter ISO country code of the country of the location.
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// Optional, the name of the state of the location.
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	// The name of the city of the location.
	City string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title of the position - for example, Software Engineer, Senior Software Engineer, etc...
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Optional, the level code of the position - for example, L3, L4, etc...
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *Position) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Position) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type MonetaryValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of the monetary value, represented in the Inflated Integer format with multiplier of 10^5.
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The 3-letter ISO currency code of the currency denoting the monetary value.
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MonetaryValue) Reset() {
	*x = MonetaryValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonetaryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonetaryValue) ProtoMessage() {}

func (x *MonetaryValue) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonetaryValue.ProtoReflect.Descriptor instead.
func (*MonetaryValue) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *MonetaryValue) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MonetaryValue) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type OfferImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *OfferImage) Reset() {
	*x = OfferImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferImage) ProtoMessage() {}

func (x *OfferImage) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferImage.ProtoReflect.Descriptor instead.
func (*OfferImage) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *OfferImage) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OfferImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Company      *Company          `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Location     *Location         `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Position     *Position         `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	TotalPackage *MonetaryValue    `protobuf:"bytes,5,opt,name=total_package,json=totalPackage,proto3" json:"total_package,omitempty"`
	Image        *OfferImage       `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Status       OfferStatus_Value `protobuf:"varint,7,opt,name=status,proto3,enum=offer_core_service.v1.OfferStatus_Value" json:"status,omitempty"`
	CreatedTime  uint64            `protobuf:"varint,8,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *Offer) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Offer) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *Offer) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Offer) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Offer) GetTotalPackage() *MonetaryValue {
	if x != nil {
		return x.TotalPackage
	}
	return nil
}

func (x *Offer) GetImage() *OfferImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Offer) GetStatus() OfferStatus_Value {
	if x != nil {
		return x.Status
	}
	return OfferStatus_VALUE_UNSPECIFIED
}

func (x *Offer) GetCreatedTime() uint64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

// Filter options when listing offers. Offers must match all of the provided conditions to be returned in the final result.
type OfferListFilterOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of company IDs where the offers were extended from. Offers must belong to one of the provided company IDs.
	CompanyIdList []uint64 `protobuf:"varint,1,rep,packed,name=company_id_list,json=companyIdList,proto3" json:"company_id_list,omitempty"`
	// The list of country names where the offers were extended from. Offers must belong to one of the provided countries.
	CountryList []string `protobuf:"bytes,2,rep,name=country_list,json=countryList,proto3" json:"country_list,omitempty"`
	// The list of state names where the offers were extended from. Offers must belong to one of the provided states.
	StateList []string `protobuf:"bytes,3,rep,name=state_list,json=stateList,proto3" json:"state_list,omitempty"`
	// The list of city names where the offers were extended from. Offers must belong to one of the provided cities.
	CityList []string `protobuf:"bytes,4,rep,name=city_list,json=cityList,proto3" json:"city_list,omitempty"`
	// The list of position titles of the requested offers. Offers must match one of the provided title using full-text index search.
	PositionTitleList []string `protobuf:"bytes,5,rep,name=position_title_list,json=positionTitleList,proto3" json:"position_title_list,omitempty"`
	// The list of position level codes of the requested offers. Offers must match one of the provided level codes.
	PositionLevelList []string `protobuf:"bytes,6,rep,name=position_level_list,json=positionLevelList,proto3" json:"position_level_list,omitempty"`
	// The list of statuses the offer must be in. Any users can filter for offers with APPROVED status, but only whitelisted users can filter for offer of other statuses.
	StatusList []OfferStatus_Value `protobuf:"varint,7,rep,packed,name=status_list,json=statusList,proto3,enum=offer_core_service.v1.OfferStatus_Value" json:"status_list,omitempty"`
}

func (x *OfferListFilterOptions) Reset() {
	*x = OfferListFilterOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferListFilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferListFilterOptions) ProtoMessage() {}

func (x *OfferListFilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferListFilterOptions.ProtoReflect.Descriptor instead.
func (*OfferListFilterOptions) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *OfferListFilterOptions) GetCompanyIdList() []uint64 {
	if x != nil {
		return x.CompanyIdList
	}
	return nil
}

func (x *OfferListFilterOptions) GetCountryList() []string {
	if x != nil {
		return x.CountryList
	}
	return nil
}

func (x *OfferListFilterOptions) GetStateList() []string {
	if x != nil {
		return x.StateList
	}
	return nil
}

func (x *OfferListFilterOptions) GetCityList() []string {
	if x != nil {
		return x.CityList
	}
	return nil
}

func (x *OfferListFilterOptions) GetPositionTitleList() []string {
	if x != nil {
		return x.PositionTitleList
	}
	return nil
}

func (x *OfferListFilterOptions) GetPositionLevelList() []string {
	if x != nil {
		return x.PositionLevelList
	}
	return nil
}

func (x *OfferListFilterOptions) GetStatusList() []OfferStatus_Value {
	if x != nil {
		return x.StatusList
	}
	return nil
}

type OfferListSortOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OfferListSortOrder) Reset() {
	*x = OfferListSortOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferListSortOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferListSortOrder) ProtoMessage() {}

func (x *OfferListSortOrder) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferListSortOrder.ProtoReflect.Descriptor instead.
func (*OfferListSortOrder) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{8}
}

type CreateOfferImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateOfferImageRequest) Reset() {
	*x = CreateOfferImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferImageRequest) ProtoMessage() {}

func (x *CreateOfferImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferImageRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferImageRequest) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{9}
}

type CreateOfferImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *OfferImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *CreateOfferImageResponse) Reset() {
	*x = CreateOfferImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferImageResponse) ProtoMessage() {}

func (x *CreateOfferImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferImageResponse.ProtoReflect.Descriptor instead.
func (*CreateOfferImageResponse) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreateOfferImageResponse) GetImage() *OfferImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type CreateOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the company ID is provided and exists inside the database, the newly created offer will be associated to that company.
	// Otherwise, if the company name is provided, Offer Core Service will try to match it with an existing company inside the database.
	// If none is found, then a new company record is created inside the database.
	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	// If the location ID is provided and exists inside the database, the newly created offer will be associated to that location.
	// Otherwise, Offer Core Service will try to match the location's country, state and city with an existing location inside the database.
	// If none is found, then a new location record is created inside the database.
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// If the position ID is provided and exists inside the database, the newly created offer will be associated to that position.
	// Otherwise, Offer Core Service will try to match the position's title and level with an existing position inside the database.
	// If none is found, then a new position record is created inside the database.
	Position     *Position      `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	TotalPackage *MonetaryValue `protobuf:"bytes,4,opt,name=total_package,json=totalPackage,proto3" json:"total_package,omitempty"`
	// Must be an image ID returned by the CreateOfferImage API, and the presigned URL associated with that image inside our database must
	// have an image uploaded to it.
	ImageId uint64 `protobuf:"varint,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *CreateOfferRequest) Reset() {
	*x = CreateOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferRequest) ProtoMessage() {}

func (x *CreateOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferRequest) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateOfferRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateOfferRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CreateOfferRequest) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CreateOfferRequest) GetTotalPackage() *MonetaryValue {
	if x != nil {
		return x.TotalPackage
	}
	return nil
}

func (x *CreateOfferRequest) GetImageId() uint64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

type CreateOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer *Offer `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *CreateOfferResponse) Reset() {
	*x = CreateOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferResponse) ProtoMessage() {}

func (x *CreateOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferResponse.ProtoReflect.Descriptor instead.
func (*CreateOfferResponse) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *CreateOfferResponse) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

type UpdateOfferStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status OfferStatus_Value `protobuf:"varint,6,opt,name=status,proto3,enum=offer_core_service.v1.OfferStatus_Value" json:"status,omitempty"`
}

func (x *UpdateOfferStatusRequest) Reset() {
	*x = UpdateOfferStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOfferStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfferStatusRequest) ProtoMessage() {}

func (x *UpdateOfferStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfferStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateOfferStatusRequest) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateOfferStatusRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOfferStatusRequest) GetStatus() OfferStatus_Value {
	if x != nil {
		return x.Status
	}
	return OfferStatus_VALUE_UNSPECIFIED
}

type UpdateOfferStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateOfferStatusResponse) Reset() {
	*x = UpdateOfferStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOfferStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOfferStatusResponse) ProtoMessage() {}

func (x *UpdateOfferStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOfferStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateOfferStatusResponse) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{14}
}

type GetOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOfferRequest) Reset() {
	*x = GetOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferRequest) ProtoMessage() {}

func (x *GetOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferRequest.ProtoReflect.Descriptor instead.
func (*GetOfferRequest) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetOfferRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOfferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer *Offer `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *GetOfferResponse) Reset() {
	*x = GetOfferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferResponse) ProtoMessage() {}

func (x *GetOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferResponse.ProtoReflect.Descriptor instead.
func (*GetOfferResponse) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetOfferResponse) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

type GetOfferListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterOptions *OfferListFilterOptions  `protobuf:"bytes,1,opt,name=filter_options,json=filterOptions,proto3" json:"filter_options,omitempty"`
	SortOrder     OfferListSortOrder_Value `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=offer_core_service.v1.OfferListSortOrder_Value" json:"sort_order,omitempty"`
	Offset        uint64                   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         uint64                   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetOfferListRequest) Reset() {
	*x = GetOfferListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferListRequest) ProtoMessage() {}

func (x *GetOfferListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferListRequest.ProtoReflect.Descriptor instead.
func (*GetOfferListRequest) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{17}
}

func (x *GetOfferListRequest) GetFilterOptions() *OfferListFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *GetOfferListRequest) GetSortOrder() OfferListSortOrder_Value {
	if x != nil {
		return x.SortOrder
	}
	return OfferListSortOrder_VALUE_UNSPECIFIED
}

func (x *GetOfferListRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetOfferListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOfferListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferList       []*Offer `protobuf:"bytes,1,rep,name=offer_list,json=offerList,proto3" json:"offer_list,omitempty"`
	TotalOfferCount uint64   `protobuf:"varint,2,opt,name=total_offer_count,json=totalOfferCount,proto3" json:"total_offer_count,omitempty"`
}

func (x *GetOfferListResponse) Reset() {
	*x = GetOfferListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_core_service_v1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferListResponse) ProtoMessage() {}

func (x *GetOfferListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_core_service_v1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferListResponse.ProtoReflect.Descriptor instead.
func (*GetOfferListResponse) Descriptor() ([]byte, []int) {
	return file_offer_core_service_v1_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetOfferListResponse) GetOfferList() []*Offer {
	if x != nil {
		return x.OfferList
	}
	return nil
}

func (x *GetOfferListResponse) GetTotalOfferCount() uint64 {
	if x != nil {
		return x.TotalOfferCount
	}
	return 0
}

var File_offer_core_service_v1_api_proto protoreflect.FileDescriptor

var file_offer_core_service_v1_api_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6c, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x5d, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x41, 0x50,
	0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x55,
	0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x95, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72, 0x2b,
	0x32, 0x29, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70,
	0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b,
	0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x32, 0x35, 0x36, 0x7d, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xd3, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c, 0x32, 0x0a, 0x5e, 0x5b,
	0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d,
	0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c,
	0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x30, 0x2c, 0x36, 0x34, 0x7d,
	0x24, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e,
	0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d,
	0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d,
	0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0xa7, 0x01,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72, 0x2b,
	0x32, 0x29, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70,
	0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b,
	0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x32, 0x35, 0x36, 0x7d, 0x24, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d,
	0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c,
	0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x30, 0x2c, 0x36, 0x34, 0x7d,
	0x24, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x65, 0x74,
	0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c, 0x32, 0x0a, 0x5e, 0x5b, 0x41, 0x2d, 0x5a,
	0x5d, 0x7b, 0x33, 0x7d, 0x24, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x2e, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0xb4, 0x03, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x74, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf6, 0x04, 0x0a, 0x16, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x30, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x10, 0x0a, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01,
	0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d,
	0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c,
	0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d,
	0x24, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a,
	0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70,
	0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b,
	0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30,
	0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c,
	0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70,
	0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24,
	0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x13, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30, 0x10,
	0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70,
	0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b,
	0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x32, 0x35, 0x36, 0x7d, 0x52,
	0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x66, 0x0a, 0x13, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e,
	0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d,
	0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d,
	0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01,
	0x02, 0x10, 0x0a, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xf6, 0x02, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xdf, 0x02, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x41, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x08, 0x12, 0x21, 0x0a, 0x1d, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x22, 0xf2, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x54, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x18, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x7f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x32, 0xb5, 0x04, 0x0a, 0x10, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x2e, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd1, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x13, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offer_core_service_v1_api_proto_rawDescOnce sync.Once
	file_offer_core_service_v1_api_proto_rawDescData = file_offer_core_service_v1_api_proto_rawDesc
)

func file_offer_core_service_v1_api_proto_rawDescGZIP() []byte {
	file_offer_core_service_v1_api_proto_rawDescOnce.Do(func() {
		file_offer_core_service_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_offer_core_service_v1_api_proto_rawDescData)
	})
	return file_offer_core_service_v1_api_proto_rawDescData
}

var file_offer_core_service_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_offer_core_service_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_offer_core_service_v1_api_proto_goTypes = []interface{}{
	(OfferStatus_Value)(0),            // 0: offer_core_service.v1.OfferStatus.Value
	(OfferListSortOrder_Value)(0),     // 1: offer_core_service.v1.OfferListSortOrder.Value
	(*OfferStatus)(nil),               // 2: offer_core_service.v1.OfferStatus
	(*Company)(nil),                   // 3: offer_core_service.v1.Company
	(*Location)(nil),                  // 4: offer_core_service.v1.Location
	(*Position)(nil),                  // 5: offer_core_service.v1.Position
	(*MonetaryValue)(nil),             // 6: offer_core_service.v1.MonetaryValue
	(*OfferImage)(nil),                // 7: offer_core_service.v1.OfferImage
	(*Offer)(nil),                     // 8: offer_core_service.v1.Offer
	(*OfferListFilterOptions)(nil),    // 9: offer_core_service.v1.OfferListFilterOptions
	(*OfferListSortOrder)(nil),        // 10: offer_core_service.v1.OfferListSortOrder
	(*CreateOfferImageRequest)(nil),   // 11: offer_core_service.v1.CreateOfferImageRequest
	(*CreateOfferImageResponse)(nil),  // 12: offer_core_service.v1.CreateOfferImageResponse
	(*CreateOfferRequest)(nil),        // 13: offer_core_service.v1.CreateOfferRequest
	(*CreateOfferResponse)(nil),       // 14: offer_core_service.v1.CreateOfferResponse
	(*UpdateOfferStatusRequest)(nil),  // 15: offer_core_service.v1.UpdateOfferStatusRequest
	(*UpdateOfferStatusResponse)(nil), // 16: offer_core_service.v1.UpdateOfferStatusResponse
	(*GetOfferRequest)(nil),           // 17: offer_core_service.v1.GetOfferRequest
	(*GetOfferResponse)(nil),          // 18: offer_core_service.v1.GetOfferResponse
	(*GetOfferListRequest)(nil),       // 19: offer_core_service.v1.GetOfferListRequest
	(*GetOfferListResponse)(nil),      // 20: offer_core_service.v1.GetOfferListResponse
}
var file_offer_core_service_v1_api_proto_depIdxs = []int32{
	3,  // 0: offer_core_service.v1.Offer.company:type_name -> offer_core_service.v1.Company
	4,  // 1: offer_core_service.v1.Offer.location:type_name -> offer_core_service.v1.Location
	5,  // 2: offer_core_service.v1.Offer.position:type_name -> offer_core_service.v1.Position
	6,  // 3: offer_core_service.v1.Offer.total_package:type_name -> offer_core_service.v1.MonetaryValue
	7,  // 4: offer_core_service.v1.Offer.image:type_name -> offer_core_service.v1.OfferImage
	0,  // 5: offer_core_service.v1.Offer.status:type_name -> offer_core_service.v1.OfferStatus.Value
	0,  // 6: offer_core_service.v1.OfferListFilterOptions.status_list:type_name -> offer_core_service.v1.OfferStatus.Value
	7,  // 7: offer_core_service.v1.CreateOfferImageResponse.image:type_name -> offer_core_service.v1.OfferImage
	3,  // 8: offer_core_service.v1.CreateOfferRequest.company:type_name -> offer_core_service.v1.Company
	4,  // 9: offer_core_service.v1.CreateOfferRequest.location:type_name -> offer_core_service.v1.Location
	5,  // 10: offer_core_service.v1.CreateOfferRequest.position:type_name -> offer_core_service.v1.Position
	6,  // 11: offer_core_service.v1.CreateOfferRequest.total_package:type_name -> offer_core_service.v1.MonetaryValue
	8,  // 12: offer_core_service.v1.CreateOfferResponse.offer:type_name -> offer_core_service.v1.Offer
	0,  // 13: offer_core_service.v1.UpdateOfferStatusRequest.status:type_name -> offer_core_service.v1.OfferStatus.Value
	8,  // 14: offer_core_service.v1.GetOfferResponse.offer:type_name -> offer_core_service.v1.Offer
	9,  // 15: offer_core_service.v1.GetOfferListRequest.filter_options:type_name -> offer_core_service.v1.OfferListFilterOptions
	1,  // 16: offer_core_service.v1.GetOfferListRequest.sort_order:type_name -> offer_core_service.v1.OfferListSortOrder.Value
	8,  // 17: offer_core_service.v1.GetOfferListResponse.offer_list:type_name -> offer_core_service.v1.Offer
	11, // 18: offer_core_service.v1.OfferCoreService.CreateOfferImage:input_type -> offer_core_service.v1.CreateOfferImageRequest
	13, // 19: offer_core_service.v1.OfferCoreService.CreateOffer:input_type -> offer_core_service.v1.CreateOfferRequest
	15, // 20: offer_core_service.v1.OfferCoreService.UpdateOfferStatus:input_type -> offer_core_service.v1.UpdateOfferStatusRequest
	17, // 21: offer_core_service.v1.OfferCoreService.GetOffer:input_type -> offer_core_service.v1.GetOfferRequest
	19, // 22: offer_core_service.v1.OfferCoreService.GetOfferList:input_type -> offer_core_service.v1.GetOfferListRequest
	12, // 23: offer_core_service.v1.OfferCoreService.CreateOfferImage:output_type -> offer_core_service.v1.CreateOfferImageResponse
	14, // 24: offer_core_service.v1.OfferCoreService.CreateOffer:output_type -> offer_core_service.v1.CreateOfferResponse
	16, // 25: offer_core_service.v1.OfferCoreService.UpdateOfferStatus:output_type -> offer_core_service.v1.UpdateOfferStatusResponse
	18, // 26: offer_core_service.v1.OfferCoreService.GetOffer:output_type -> offer_core_service.v1.GetOfferResponse
	20, // 27: offer_core_service.v1.OfferCoreService.GetOfferList:output_type -> offer_core_service.v1.GetOfferListResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_offer_core_service_v1_api_proto_init() }
func file_offer_core_service_v1_api_proto_init() {
	if File_offer_core_service_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offer_core_service_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonetaryValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferListFilterOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferListSortOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOfferStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOfferStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_core_service_v1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offer_core_service_v1_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offer_core_service_v1_api_proto_goTypes,
		DependencyIndexes: file_offer_core_service_v1_api_proto_depIdxs,
		EnumInfos:         file_offer_core_service_v1_api_proto_enumTypes,
		MessageInfos:      file_offer_core_service_v1_api_proto_msgTypes,
	}.Build()
	File_offer_core_service_v1_api_proto = out.File
	file_offer_core_service_v1_api_proto_rawDesc = nil
	file_offer_core_service_v1_api_proto_goTypes = nil
	file_offer_core_service_v1_api_proto_depIdxs = nil
}
