syntax = "proto3";

package account_core;
import "validate.proto";
import "google/api/annotations.proto";

option go_package = "grpc/account_core";

// TO DO: create validators

message Account {
    optional uint64 id = 1;
    optional string email = 2;
    optional string name = 3;
    optional string picture = 4;
    optional string created_at = 99;
    optional string updated_at = 100;
}

message CreateAccountRequest { optional Account account = 1; }

message CreateAccountResponse { optional Account account = 1; }

message ModifyAccountRequest {
    optional Account account = 1; // must pass id, can only modify name, picture, role
                                  // TO DO: support modify email
}

message ModifyAccountResponse { optional Account account = 1; }

message GetAccountRequest { optional uint64 account_id = 1; }

message GetAccountResponse { optional Account account = 1; }

message AccountSession {
    optional string token = 1;
    optional uint64 expiry_time_ms = 2; // TIMESTAMP_MS
    optional uint64 account_id = 3;
}

message CreateSessionRequest { uint64 account_id = 1 [ (validate.rules).uint64.gt = 0 ]; }

message CreateSessionResponse { Account account = 1; }

message DeleteSessionRequest {}

message DeleteSessionResponse {}

message GetSessionRequest { optional string token = 1; }

message GetSessionResponse {
    optional bool is_valid = 1;
    optional Account account = 2;
}

service AccountService {
    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {}

    rpc UpdateAccount(ModifyAccountRequest) returns (ModifyAccountResponse) {}

    rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {}

    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {
        option (google.api.http) = {
            post : "/api/v1/sessions",
            body : "*"
        };
    }

    rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {}
    
    rpc DeleteSession(DeleteSessionRequest) returns (DeleteSessionResponse) {
        option (google.api.http) = {
            delete : "/api/v1/sessions",
        };
    }

}
