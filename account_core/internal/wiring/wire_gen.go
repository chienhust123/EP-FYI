// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wiring

import (
	"auth_service/internal/app"
	"auth_service/internal/configs"
	"auth_service/internal/dataaccess"
	"auth_service/internal/handler"
	"auth_service/internal/handler/grpc"
	"auth_service/internal/logic"
	"auth_service/internal/utils"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeStandaloneServer(configFilePath configs.ConfigFilePath) (app.StandaloneServer, func(), error) {
	config, err := configs.NewConfig(configFilePath)
	if err != nil {
		return app.StandaloneServer{}, nil, err
	}
	configsGRPC := config.GRPC
	accountServiceServer := grpc.NewHandler()
	server := grpc.NewServer(configsGRPC, accountServiceServer)
	log := config.Log
	logger, cleanup, err := utils.NewLogger(log)
	if err != nil {
		return app.StandaloneServer{}, nil, err
	}
	standaloneServer, err := app.NewStandaloneServer(server, logger)
	if err != nil {
		cleanup()
		return app.StandaloneServer{}, nil, err
	}
	return standaloneServer, func() {
		cleanup()
	}, nil
}

// wire.go:

var WireSet = wire.NewSet(configs.WireSet, dataaccess.WireSet, handler.WireSet, logic.WireSet, utils.WireSet, app.WireSet)
