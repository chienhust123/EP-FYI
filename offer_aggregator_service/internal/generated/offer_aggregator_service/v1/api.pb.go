// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: offer_aggregator_service/v1/api.proto

package offer_aggregator_servicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "offer_aggregator_service/validate"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompanyAggregatedOfferStatsSortOrder_Value int32

const (
	CompanyAggregatedOfferStatsSortOrder_VALUE_UNSPECIFIED CompanyAggregatedOfferStatsSortOrder_Value = 0
	// Sort offer by ascending country first, then ascending state, ascending city and aseconding ID.
	CompanyAggregatedOfferStatsSortOrder_VALUE_LOCATION_ASCENDING CompanyAggregatedOfferStatsSortOrder_Value = 5
	// Sort offer by descending country first, then descending state, descending city and descending ID.
	CompanyAggregatedOfferStatsSortOrder_VALUE_LOCATION_DESCENDING CompanyAggregatedOfferStatsSortOrder_Value = 6
	// Sort offer by ascending position name first, ascending ID second.
	CompanyAggregatedOfferStatsSortOrder_VALUE_POSITION_ASCENDING CompanyAggregatedOfferStatsSortOrder_Value = 7
	// Sort offer by descending position name first, descending ID second.
	CompanyAggregatedOfferStatsSortOrder_VALUE_POSITION_DESCENDING CompanyAggregatedOfferStatsSortOrder_Value = 8
)

// Enum value maps for CompanyAggregatedOfferStatsSortOrder_Value.
var (
	CompanyAggregatedOfferStatsSortOrder_Value_name = map[int32]string{
		0: "VALUE_UNSPECIFIED",
		5: "VALUE_LOCATION_ASCENDING",
		6: "VALUE_LOCATION_DESCENDING",
		7: "VALUE_POSITION_ASCENDING",
		8: "VALUE_POSITION_DESCENDING",
	}
	CompanyAggregatedOfferStatsSortOrder_Value_value = map[string]int32{
		"VALUE_UNSPECIFIED":         0,
		"VALUE_LOCATION_ASCENDING":  5,
		"VALUE_LOCATION_DESCENDING": 6,
		"VALUE_POSITION_ASCENDING":  7,
		"VALUE_POSITION_DESCENDING": 8,
	}
)

func (x CompanyAggregatedOfferStatsSortOrder_Value) Enum() *CompanyAggregatedOfferStatsSortOrder_Value {
	p := new(CompanyAggregatedOfferStatsSortOrder_Value)
	*p = x
	return p
}

func (x CompanyAggregatedOfferStatsSortOrder_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyAggregatedOfferStatsSortOrder_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_offer_aggregator_service_v1_api_proto_enumTypes[0].Descriptor()
}

func (CompanyAggregatedOfferStatsSortOrder_Value) Type() protoreflect.EnumType {
	return &file_offer_aggregator_service_v1_api_proto_enumTypes[0]
}

func (x CompanyAggregatedOfferStatsSortOrder_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyAggregatedOfferStatsSortOrder_Value.Descriptor instead.
func (CompanyAggregatedOfferStatsSortOrder_Value) EnumDescriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{5, 0}
}

type AggregatedCompanyStatsSortOrder_Value int32

const (
	AggregatedCompanyStatsSortOrder_VALUE_UNSPECIFIED AggregatedCompanyStatsSortOrder_Value = 0
	// Sort offer by ascending company ID.
	AggregatedCompanyStatsSortOrder_VALUE_ID_ASCENDING AggregatedCompanyStatsSortOrder_Value = 1
	// Sort offer by descending company ID.
	AggregatedCompanyStatsSortOrder_VALUE_ID_DESCENDING AggregatedCompanyStatsSortOrder_Value = 2
	// Sort offer by ascending company name first, ascending company ID second.
	AggregatedCompanyStatsSortOrder_VALUE_NAME_ASCENDING AggregatedCompanyStatsSortOrder_Value = 3
	// Sort offer by descending company name first, descending company ID second.
	AggregatedCompanyStatsSortOrder_VALUE_NAME_DESCENDING AggregatedCompanyStatsSortOrder_Value = 4
)

// Enum value maps for AggregatedCompanyStatsSortOrder_Value.
var (
	AggregatedCompanyStatsSortOrder_Value_name = map[int32]string{
		0: "VALUE_UNSPECIFIED",
		1: "VALUE_ID_ASCENDING",
		2: "VALUE_ID_DESCENDING",
		3: "VALUE_NAME_ASCENDING",
		4: "VALUE_NAME_DESCENDING",
	}
	AggregatedCompanyStatsSortOrder_Value_value = map[string]int32{
		"VALUE_UNSPECIFIED":     0,
		"VALUE_ID_ASCENDING":    1,
		"VALUE_ID_DESCENDING":   2,
		"VALUE_NAME_ASCENDING":  3,
		"VALUE_NAME_DESCENDING": 4,
	}
)

func (x AggregatedCompanyStatsSortOrder_Value) Enum() *AggregatedCompanyStatsSortOrder_Value {
	p := new(AggregatedCompanyStatsSortOrder_Value)
	*p = x
	return p
}

func (x AggregatedCompanyStatsSortOrder_Value) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregatedCompanyStatsSortOrder_Value) Descriptor() protoreflect.EnumDescriptor {
	return file_offer_aggregator_service_v1_api_proto_enumTypes[1].Descriptor()
}

func (AggregatedCompanyStatsSortOrder_Value) Type() protoreflect.EnumType {
	return &file_offer_aggregator_service_v1_api_proto_enumTypes[1]
}

func (x AggregatedCompanyStatsSortOrder_Value) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregatedCompanyStatsSortOrder_Value.Descriptor instead.
func (AggregatedCompanyStatsSortOrder_Value) EnumDescriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{7, 0}
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProfileImageUrl string `protobuf:"bytes,3,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *Company) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	State   string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	City    string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *Position) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Position) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type MonetaryValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of the monetary value, represented in the Inflated Integer format with multiplier of 10^5.
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The 3-letter ISO currency code of the currency denoting the monetary value.
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MonetaryValue) Reset() {
	*x = MonetaryValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonetaryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonetaryValue) ProtoMessage() {}

func (x *MonetaryValue) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonetaryValue.ProtoReflect.Descriptor instead.
func (*MonetaryValue) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *MonetaryValue) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MonetaryValue) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type AggregatedOfferStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Company             *Company       `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Location            *Location      `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Position            *Position      `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	MinimumTotalPackage *MonetaryValue `protobuf:"bytes,5,opt,name=minimum_total_package,json=minimumTotalPackage,proto3" json:"minimum_total_package,omitempty"`
	MaximumTotalPackage *MonetaryValue `protobuf:"bytes,6,opt,name=maximum_total_package,json=maximumTotalPackage,proto3" json:"maximum_total_package,omitempty"`
}

func (x *AggregatedOfferStats) Reset() {
	*x = AggregatedOfferStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedOfferStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedOfferStats) ProtoMessage() {}

func (x *AggregatedOfferStats) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedOfferStats.ProtoReflect.Descriptor instead.
func (*AggregatedOfferStats) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *AggregatedOfferStats) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AggregatedOfferStats) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *AggregatedOfferStats) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *AggregatedOfferStats) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AggregatedOfferStats) GetMinimumTotalPackage() *MonetaryValue {
	if x != nil {
		return x.MinimumTotalPackage
	}
	return nil
}

func (x *AggregatedOfferStats) GetMaximumTotalPackage() *MonetaryValue {
	if x != nil {
		return x.MaximumTotalPackage
	}
	return nil
}

type CompanyAggregatedOfferStatsSortOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompanyAggregatedOfferStatsSortOrder) Reset() {
	*x = CompanyAggregatedOfferStatsSortOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAggregatedOfferStatsSortOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAggregatedOfferStatsSortOrder) ProtoMessage() {}

func (x *CompanyAggregatedOfferStatsSortOrder) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAggregatedOfferStatsSortOrder.ProtoReflect.Descriptor instead.
func (*CompanyAggregatedOfferStatsSortOrder) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{5}
}

type AggregatedCompanyStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company              *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	TotalSubmissionCount uint64   `protobuf:"varint,2,opt,name=total_submission_count,json=totalSubmissionCount,proto3" json:"total_submission_count,omitempty"`
}

func (x *AggregatedCompanyStats) Reset() {
	*x = AggregatedCompanyStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedCompanyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedCompanyStats) ProtoMessage() {}

func (x *AggregatedCompanyStats) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedCompanyStats.ProtoReflect.Descriptor instead.
func (*AggregatedCompanyStats) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *AggregatedCompanyStats) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *AggregatedCompanyStats) GetTotalSubmissionCount() uint64 {
	if x != nil {
		return x.TotalSubmissionCount
	}
	return 0
}

type AggregatedCompanyStatsSortOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AggregatedCompanyStatsSortOrder) Reset() {
	*x = AggregatedCompanyStatsSortOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedCompanyStatsSortOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedCompanyStatsSortOrder) ProtoMessage() {}

func (x *AggregatedCompanyStatsSortOrder) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedCompanyStatsSortOrder.ProtoReflect.Descriptor instead.
func (*AggregatedCompanyStatsSortOrder) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{7}
}

// Filter options when listing aggregated company statistics. Entries must match all of the provided conditions to be returned in the final result.
type AggregatedCompanyStatsFilterOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The company name to search for. The company's name must match the provided query using full-text index search.
	CompanyNameQuery string `protobuf:"bytes,1,opt,name=company_name_query,json=companyNameQuery,proto3" json:"company_name_query,omitempty"`
	// The list of country ISO codes where the offers were extended from.
	// The company must have at least one aggregated offer information belonging to one of the provided countries.
	CountryList []string `protobuf:"bytes,2,rep,name=country_list,json=countryList,proto3" json:"country_list,omitempty"`
	// The list of state names where the offers were extended from.
	// The company must have at least one aggregated offer information belonging to one of the provided states.
	StateList []string `protobuf:"bytes,3,rep,name=state_list,json=stateList,proto3" json:"state_list,omitempty"`
	// The list of city names where the offers were extended from.
	// The company must have at least one aggregated offer information belonging to one of the provided cities.
	CityList []string `protobuf:"bytes,4,rep,name=city_list,json=cityList,proto3" json:"city_list,omitempty"`
	// The list of position titles of the requested offers.
	// The company must have at least one aggregated offer information matching one of the provided title using full-text index search.
	PositionTitleList []string `protobuf:"bytes,5,rep,name=position_title_list,json=positionTitleList,proto3" json:"position_title_list,omitempty"`
	// The list of position level codes of the requested offers.
	// The company must have at least one aggregated offer information matching one of the provided level codes.
	PositionLevelList []string `protobuf:"bytes,6,rep,name=position_level_list,json=positionLevelList,proto3" json:"position_level_list,omitempty"`
}

func (x *AggregatedCompanyStatsFilterOptions) Reset() {
	*x = AggregatedCompanyStatsFilterOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedCompanyStatsFilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedCompanyStatsFilterOptions) ProtoMessage() {}

func (x *AggregatedCompanyStatsFilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedCompanyStatsFilterOptions.ProtoReflect.Descriptor instead.
func (*AggregatedCompanyStatsFilterOptions) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *AggregatedCompanyStatsFilterOptions) GetCompanyNameQuery() string {
	if x != nil {
		return x.CompanyNameQuery
	}
	return ""
}

func (x *AggregatedCompanyStatsFilterOptions) GetCountryList() []string {
	if x != nil {
		return x.CountryList
	}
	return nil
}

func (x *AggregatedCompanyStatsFilterOptions) GetStateList() []string {
	if x != nil {
		return x.StateList
	}
	return nil
}

func (x *AggregatedCompanyStatsFilterOptions) GetCityList() []string {
	if x != nil {
		return x.CityList
	}
	return nil
}

func (x *AggregatedCompanyStatsFilterOptions) GetPositionTitleList() []string {
	if x != nil {
		return x.PositionTitleList
	}
	return nil
}

func (x *AggregatedCompanyStatsFilterOptions) GetPositionLevelList() []string {
	if x != nil {
		return x.PositionLevelList
	}
	return nil
}

type GetAggregatedCompanyStatsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cursor:
	//
	//	*GetAggregatedCompanyStatsListRequest_CompanyId
	//	*GetAggregatedCompanyStatsListRequest_CompanyName
	Cursor    isGetAggregatedCompanyStatsListRequest_Cursor `protobuf_oneof:"cursor"`
	SortOrder AggregatedCompanyStatsSortOrder_Value         `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3,enum=offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder_Value" json:"sort_order,omitempty"`
	Limit     uint64                                        `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAggregatedCompanyStatsListRequest) Reset() {
	*x = GetAggregatedCompanyStatsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedCompanyStatsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedCompanyStatsListRequest) ProtoMessage() {}

func (x *GetAggregatedCompanyStatsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedCompanyStatsListRequest.ProtoReflect.Descriptor instead.
func (*GetAggregatedCompanyStatsListRequest) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{9}
}

func (m *GetAggregatedCompanyStatsListRequest) GetCursor() isGetAggregatedCompanyStatsListRequest_Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (x *GetAggregatedCompanyStatsListRequest) GetCompanyId() uint64 {
	if x, ok := x.GetCursor().(*GetAggregatedCompanyStatsListRequest_CompanyId); ok {
		return x.CompanyId
	}
	return 0
}

func (x *GetAggregatedCompanyStatsListRequest) GetCompanyName() string {
	if x, ok := x.GetCursor().(*GetAggregatedCompanyStatsListRequest_CompanyName); ok {
		return x.CompanyName
	}
	return ""
}

func (x *GetAggregatedCompanyStatsListRequest) GetSortOrder() AggregatedCompanyStatsSortOrder_Value {
	if x != nil {
		return x.SortOrder
	}
	return AggregatedCompanyStatsSortOrder_VALUE_UNSPECIFIED
}

func (x *GetAggregatedCompanyStatsListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type isGetAggregatedCompanyStatsListRequest_Cursor interface {
	isGetAggregatedCompanyStatsListRequest_Cursor()
}

type GetAggregatedCompanyStatsListRequest_CompanyId struct {
	CompanyId uint64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3,oneof"`
}

type GetAggregatedCompanyStatsListRequest_CompanyName struct {
	CompanyName string `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3,oneof"`
}

func (*GetAggregatedCompanyStatsListRequest_CompanyId) isGetAggregatedCompanyStatsListRequest_Cursor() {
}

func (*GetAggregatedCompanyStatsListRequest_CompanyName) isGetAggregatedCompanyStatsListRequest_Cursor() {
}

type GetAggregatedCompanyStatsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyStatList []*AggregatedCompanyStats `protobuf:"bytes,1,rep,name=company_stat_list,json=companyStatList,proto3" json:"company_stat_list,omitempty"`
	// Types that are assignable to PreviousCursor:
	//
	//	*GetAggregatedCompanyStatsListResponse_PreviousCompanyId
	//	*GetAggregatedCompanyStatsListResponse_PreviousCompanyName
	PreviousCursor isGetAggregatedCompanyStatsListResponse_PreviousCursor `protobuf_oneof:"previous_cursor"`
	// Types that are assignable to NextCursor:
	//
	//	*GetAggregatedCompanyStatsListResponse_NextCompanyId
	//	*GetAggregatedCompanyStatsListResponse_NextCompanyName
	NextCursor isGetAggregatedCompanyStatsListResponse_NextCursor `protobuf_oneof:"next_cursor"`
}

func (x *GetAggregatedCompanyStatsListResponse) Reset() {
	*x = GetAggregatedCompanyStatsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedCompanyStatsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedCompanyStatsListResponse) ProtoMessage() {}

func (x *GetAggregatedCompanyStatsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedCompanyStatsListResponse.ProtoReflect.Descriptor instead.
func (*GetAggregatedCompanyStatsListResponse) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetAggregatedCompanyStatsListResponse) GetCompanyStatList() []*AggregatedCompanyStats {
	if x != nil {
		return x.CompanyStatList
	}
	return nil
}

func (m *GetAggregatedCompanyStatsListResponse) GetPreviousCursor() isGetAggregatedCompanyStatsListResponse_PreviousCursor {
	if m != nil {
		return m.PreviousCursor
	}
	return nil
}

func (x *GetAggregatedCompanyStatsListResponse) GetPreviousCompanyId() uint64 {
	if x, ok := x.GetPreviousCursor().(*GetAggregatedCompanyStatsListResponse_PreviousCompanyId); ok {
		return x.PreviousCompanyId
	}
	return 0
}

func (x *GetAggregatedCompanyStatsListResponse) GetPreviousCompanyName() string {
	if x, ok := x.GetPreviousCursor().(*GetAggregatedCompanyStatsListResponse_PreviousCompanyName); ok {
		return x.PreviousCompanyName
	}
	return ""
}

func (m *GetAggregatedCompanyStatsListResponse) GetNextCursor() isGetAggregatedCompanyStatsListResponse_NextCursor {
	if m != nil {
		return m.NextCursor
	}
	return nil
}

func (x *GetAggregatedCompanyStatsListResponse) GetNextCompanyId() uint64 {
	if x, ok := x.GetNextCursor().(*GetAggregatedCompanyStatsListResponse_NextCompanyId); ok {
		return x.NextCompanyId
	}
	return 0
}

func (x *GetAggregatedCompanyStatsListResponse) GetNextCompanyName() string {
	if x, ok := x.GetNextCursor().(*GetAggregatedCompanyStatsListResponse_NextCompanyName); ok {
		return x.NextCompanyName
	}
	return ""
}

type isGetAggregatedCompanyStatsListResponse_PreviousCursor interface {
	isGetAggregatedCompanyStatsListResponse_PreviousCursor()
}

type GetAggregatedCompanyStatsListResponse_PreviousCompanyId struct {
	PreviousCompanyId uint64 `protobuf:"varint,2,opt,name=previous_company_id,json=previousCompanyId,proto3,oneof"`
}

type GetAggregatedCompanyStatsListResponse_PreviousCompanyName struct {
	PreviousCompanyName string `protobuf:"bytes,3,opt,name=previous_company_name,json=previousCompanyName,proto3,oneof"`
}

func (*GetAggregatedCompanyStatsListResponse_PreviousCompanyId) isGetAggregatedCompanyStatsListResponse_PreviousCursor() {
}

func (*GetAggregatedCompanyStatsListResponse_PreviousCompanyName) isGetAggregatedCompanyStatsListResponse_PreviousCursor() {
}

type isGetAggregatedCompanyStatsListResponse_NextCursor interface {
	isGetAggregatedCompanyStatsListResponse_NextCursor()
}

type GetAggregatedCompanyStatsListResponse_NextCompanyId struct {
	NextCompanyId uint64 `protobuf:"varint,4,opt,name=next_company_id,json=nextCompanyId,proto3,oneof"`
}

type GetAggregatedCompanyStatsListResponse_NextCompanyName struct {
	NextCompanyName string `protobuf:"bytes,5,opt,name=next_company_name,json=nextCompanyName,proto3,oneof"`
}

func (*GetAggregatedCompanyStatsListResponse_NextCompanyId) isGetAggregatedCompanyStatsListResponse_NextCursor() {
}

func (*GetAggregatedCompanyStatsListResponse_NextCompanyName) isGetAggregatedCompanyStatsListResponse_NextCursor() {
}

type SearchAggregatedCompanyStatsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterOptions *AggregatedCompanyStatsFilterOptions  `protobuf:"bytes,1,opt,name=filter_options,json=filterOptions,proto3" json:"filter_options,omitempty"`
	SortOrder     AggregatedCompanyStatsSortOrder_Value `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder_Value" json:"sort_order,omitempty"`
	Offset        uint64                                `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         uint64                                `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchAggregatedCompanyStatsListRequest) Reset() {
	*x = SearchAggregatedCompanyStatsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAggregatedCompanyStatsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAggregatedCompanyStatsListRequest) ProtoMessage() {}

func (x *SearchAggregatedCompanyStatsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAggregatedCompanyStatsListRequest.ProtoReflect.Descriptor instead.
func (*SearchAggregatedCompanyStatsListRequest) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *SearchAggregatedCompanyStatsListRequest) GetFilterOptions() *AggregatedCompanyStatsFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *SearchAggregatedCompanyStatsListRequest) GetSortOrder() AggregatedCompanyStatsSortOrder_Value {
	if x != nil {
		return x.SortOrder
	}
	return AggregatedCompanyStatsSortOrder_VALUE_UNSPECIFIED
}

func (x *SearchAggregatedCompanyStatsListRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchAggregatedCompanyStatsListRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchAggregatedCompanyStatsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyStatList       []*AggregatedCompanyStats `protobuf:"bytes,1,rep,name=company_stat_list,json=companyStatList,proto3" json:"company_stat_list,omitempty"`
	TotalCompanyStatCount uint64                    `protobuf:"varint,2,opt,name=total_company_stat_count,json=totalCompanyStatCount,proto3" json:"total_company_stat_count,omitempty"`
}

func (x *SearchAggregatedCompanyStatsListResponse) Reset() {
	*x = SearchAggregatedCompanyStatsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAggregatedCompanyStatsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAggregatedCompanyStatsListResponse) ProtoMessage() {}

func (x *SearchAggregatedCompanyStatsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAggregatedCompanyStatsListResponse.ProtoReflect.Descriptor instead.
func (*SearchAggregatedCompanyStatsListResponse) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *SearchAggregatedCompanyStatsListResponse) GetCompanyStatList() []*AggregatedCompanyStats {
	if x != nil {
		return x.CompanyStatList
	}
	return nil
}

func (x *SearchAggregatedCompanyStatsListResponse) GetTotalCompanyStatCount() uint64 {
	if x != nil {
		return x.TotalCompanyStatCount
	}
	return 0
}

type GetCompanyAggregatedOfferStatsListsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cursor:
	//
	//	*GetCompanyAggregatedOfferStatsListsRequest_LocationId
	//	*GetCompanyAggregatedOfferStatsListsRequest_PositionName
	Cursor    isGetCompanyAggregatedOfferStatsListsRequest_Cursor `protobuf_oneof:"cursor"`
	SortOrder CompanyAggregatedOfferStatsSortOrder_Value          `protobuf:"varint,3,opt,name=sort_order,json=sortOrder,proto3,enum=offer_aggregator_service.v1.CompanyAggregatedOfferStatsSortOrder_Value" json:"sort_order,omitempty"`
	Limit     uint64                                              `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) Reset() {
	*x = GetCompanyAggregatedOfferStatsListsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAggregatedOfferStatsListsRequest) ProtoMessage() {}

func (x *GetCompanyAggregatedOfferStatsListsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAggregatedOfferStatsListsRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyAggregatedOfferStatsListsRequest) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{13}
}

func (m *GetCompanyAggregatedOfferStatsListsRequest) GetCursor() isGetCompanyAggregatedOfferStatsListsRequest_Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) GetLocationId() uint64 {
	if x, ok := x.GetCursor().(*GetCompanyAggregatedOfferStatsListsRequest_LocationId); ok {
		return x.LocationId
	}
	return 0
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) GetPositionName() string {
	if x, ok := x.GetCursor().(*GetCompanyAggregatedOfferStatsListsRequest_PositionName); ok {
		return x.PositionName
	}
	return ""
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) GetSortOrder() CompanyAggregatedOfferStatsSortOrder_Value {
	if x != nil {
		return x.SortOrder
	}
	return CompanyAggregatedOfferStatsSortOrder_VALUE_UNSPECIFIED
}

func (x *GetCompanyAggregatedOfferStatsListsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type isGetCompanyAggregatedOfferStatsListsRequest_Cursor interface {
	isGetCompanyAggregatedOfferStatsListsRequest_Cursor()
}

type GetCompanyAggregatedOfferStatsListsRequest_LocationId struct {
	LocationId uint64 `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3,oneof"`
}

type GetCompanyAggregatedOfferStatsListsRequest_PositionName struct {
	PositionName string `protobuf:"bytes,2,opt,name=position_name,json=positionName,proto3,oneof"`
}

func (*GetCompanyAggregatedOfferStatsListsRequest_LocationId) isGetCompanyAggregatedOfferStatsListsRequest_Cursor() {
}

func (*GetCompanyAggregatedOfferStatsListsRequest_PositionName) isGetCompanyAggregatedOfferStatsListsRequest_Cursor() {
}

type GetCompanyAggregatedOfferStatsListsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferStatList []*AggregatedCompanyStats `protobuf:"bytes,1,rep,name=offer_stat_list,json=offerStatList,proto3" json:"offer_stat_list,omitempty"`
	// Types that are assignable to PreviousCursor:
	//
	//	*GetCompanyAggregatedOfferStatsListsResponse_PreviousLocationId
	//	*GetCompanyAggregatedOfferStatsListsResponse_PreviousPositionId
	PreviousCursor isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor `protobuf_oneof:"previous_cursor"`
	// Types that are assignable to NextCursor:
	//
	//	*GetCompanyAggregatedOfferStatsListsResponse_NextLocationId
	//	*GetCompanyAggregatedOfferStatsListsResponse_NextPositionId
	NextCursor isGetCompanyAggregatedOfferStatsListsResponse_NextCursor `protobuf_oneof:"next_cursor"`
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) Reset() {
	*x = GetCompanyAggregatedOfferStatsListsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyAggregatedOfferStatsListsResponse) ProtoMessage() {}

func (x *GetCompanyAggregatedOfferStatsListsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_offer_aggregator_service_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyAggregatedOfferStatsListsResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyAggregatedOfferStatsListsResponse) Descriptor() ([]byte, []int) {
	return file_offer_aggregator_service_v1_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) GetOfferStatList() []*AggregatedCompanyStats {
	if x != nil {
		return x.OfferStatList
	}
	return nil
}

func (m *GetCompanyAggregatedOfferStatsListsResponse) GetPreviousCursor() isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor {
	if m != nil {
		return m.PreviousCursor
	}
	return nil
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) GetPreviousLocationId() uint64 {
	if x, ok := x.GetPreviousCursor().(*GetCompanyAggregatedOfferStatsListsResponse_PreviousLocationId); ok {
		return x.PreviousLocationId
	}
	return 0
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) GetPreviousPositionId() string {
	if x, ok := x.GetPreviousCursor().(*GetCompanyAggregatedOfferStatsListsResponse_PreviousPositionId); ok {
		return x.PreviousPositionId
	}
	return ""
}

func (m *GetCompanyAggregatedOfferStatsListsResponse) GetNextCursor() isGetCompanyAggregatedOfferStatsListsResponse_NextCursor {
	if m != nil {
		return m.NextCursor
	}
	return nil
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) GetNextLocationId() uint64 {
	if x, ok := x.GetNextCursor().(*GetCompanyAggregatedOfferStatsListsResponse_NextLocationId); ok {
		return x.NextLocationId
	}
	return 0
}

func (x *GetCompanyAggregatedOfferStatsListsResponse) GetNextPositionId() string {
	if x, ok := x.GetNextCursor().(*GetCompanyAggregatedOfferStatsListsResponse_NextPositionId); ok {
		return x.NextPositionId
	}
	return ""
}

type isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor interface {
	isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor()
}

type GetCompanyAggregatedOfferStatsListsResponse_PreviousLocationId struct {
	PreviousLocationId uint64 `protobuf:"varint,2,opt,name=previous_location_id,json=previousLocationId,proto3,oneof"`
}

type GetCompanyAggregatedOfferStatsListsResponse_PreviousPositionId struct {
	PreviousPositionId string `protobuf:"bytes,3,opt,name=previous_position_id,json=previousPositionId,proto3,oneof"`
}

func (*GetCompanyAggregatedOfferStatsListsResponse_PreviousLocationId) isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor() {
}

func (*GetCompanyAggregatedOfferStatsListsResponse_PreviousPositionId) isGetCompanyAggregatedOfferStatsListsResponse_PreviousCursor() {
}

type isGetCompanyAggregatedOfferStatsListsResponse_NextCursor interface {
	isGetCompanyAggregatedOfferStatsListsResponse_NextCursor()
}

type GetCompanyAggregatedOfferStatsListsResponse_NextLocationId struct {
	NextLocationId uint64 `protobuf:"varint,4,opt,name=next_location_id,json=nextLocationId,proto3,oneof"`
}

type GetCompanyAggregatedOfferStatsListsResponse_NextPositionId struct {
	NextPositionId string `protobuf:"bytes,5,opt,name=next_position_id,json=nextPositionId,proto3,oneof"`
}

func (*GetCompanyAggregatedOfferStatsListsResponse_NextLocationId) isGetCompanyAggregatedOfferStatsListsResponse_NextCursor() {
}

func (*GetCompanyAggregatedOfferStatsListsResponse_NextPositionId) isGetCompanyAggregatedOfferStatsListsResponse_NextCursor() {
}

var File_offer_aggregator_service_v1_api_proto protoreflect.FileDescriptor

var file_offer_aggregator_service_v1_api_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xf1, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e,
	0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d,
	0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d,
	0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c,
	0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70,
	0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x30, 0x2c, 0x36, 0x34, 0x7d, 0x24,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b,
	0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c,
	0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b,
	0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0xa9, 0x01, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xfa, 0x42, 0x2d, 0x72, 0x2b, 0x32,
	0x29, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b,
	0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a,
	0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x32, 0x35, 0x36, 0x7d, 0x24, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x45, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xfa, 0x42, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d,
	0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c,
	0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x30, 0x2c, 0x36, 0x34, 0x7d,
	0x24, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x43, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x65,
	0x74, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xac, 0x03,
	0x0a, 0x14, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x15,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61,
	0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x15,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61,
	0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x01, 0x0a,
	0x24, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x4c, 0x4f,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x07, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x08,
	0x22, 0x8e, 0x01, 0x0a, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x8c, 0x04, 0x0a,
	0x23, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x18, 0xfa, 0x42, 0x15, 0x92, 0x01, 0x12,
	0x10, 0x0a, 0x22, 0x0e, 0x72, 0x0c, 0x32, 0x0a, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x5d, 0x7b, 0x32,
	0x7d, 0x24, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x55, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72,
	0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c,
	0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70,
	0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01,
	0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d,
	0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c,
	0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d,
	0x24, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x13, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30,
	0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28, 0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c,
	0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e, 0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70,
	0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d, 0x5d, 0x7b, 0x31, 0x2c, 0x32, 0x35, 0x36, 0x7d,
	0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x13, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x36, 0xfa, 0x42, 0x33, 0x92, 0x01, 0x30, 0x10, 0x0a, 0x22, 0x2c, 0x72, 0x2a, 0x32, 0x28,
	0x5e, 0x5b, 0x5c, 0x70, 0x7b, 0x4c, 0x7d, 0x5c, 0x70, 0x7b, 0x4d, 0x7d, 0x5c, 0x70, 0x7b, 0x4e,
	0x7d, 0x5c, 0x70, 0x7b, 0x50, 0x7d, 0x5c, 0x70, 0x7b, 0x53, 0x7d, 0x5c, 0x70, 0x7b, 0x5a, 0x7d,
	0x5d, 0x7b, 0x31, 0x2c, 0x36, 0x34, 0x7d, 0x24, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf8, 0x01, 0x0a, 0x24,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42,
	0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x18, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xea, 0x02, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x01, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0xac, 0x02, 0x0a, 0x27, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x67, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x18, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x28, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5f, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x18, 0x64, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0xec, 0x02, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x01, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x42, 0x11, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x32, 0xb4, 0x04, 0x0a, 0x16, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa8, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x41, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x2e,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xba, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x47, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x81, 0x02, 0x0a, 0x1f, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58,
	0xaa, 0x02, 0x19, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x19, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x25, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1a, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offer_aggregator_service_v1_api_proto_rawDescOnce sync.Once
	file_offer_aggregator_service_v1_api_proto_rawDescData = file_offer_aggregator_service_v1_api_proto_rawDesc
)

func file_offer_aggregator_service_v1_api_proto_rawDescGZIP() []byte {
	file_offer_aggregator_service_v1_api_proto_rawDescOnce.Do(func() {
		file_offer_aggregator_service_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_offer_aggregator_service_v1_api_proto_rawDescData)
	})
	return file_offer_aggregator_service_v1_api_proto_rawDescData
}

var file_offer_aggregator_service_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_offer_aggregator_service_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_offer_aggregator_service_v1_api_proto_goTypes = []interface{}{
	(CompanyAggregatedOfferStatsSortOrder_Value)(0), // 0: offer_aggregator_service.v1.CompanyAggregatedOfferStatsSortOrder.Value
	(AggregatedCompanyStatsSortOrder_Value)(0),      // 1: offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder.Value
	(*Company)(nil),                                     // 2: offer_aggregator_service.v1.Company
	(*Location)(nil),                                    // 3: offer_aggregator_service.v1.Location
	(*Position)(nil),                                    // 4: offer_aggregator_service.v1.Position
	(*MonetaryValue)(nil),                               // 5: offer_aggregator_service.v1.MonetaryValue
	(*AggregatedOfferStats)(nil),                        // 6: offer_aggregator_service.v1.AggregatedOfferStats
	(*CompanyAggregatedOfferStatsSortOrder)(nil),        // 7: offer_aggregator_service.v1.CompanyAggregatedOfferStatsSortOrder
	(*AggregatedCompanyStats)(nil),                      // 8: offer_aggregator_service.v1.AggregatedCompanyStats
	(*AggregatedCompanyStatsSortOrder)(nil),             // 9: offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder
	(*AggregatedCompanyStatsFilterOptions)(nil),         // 10: offer_aggregator_service.v1.AggregatedCompanyStatsFilterOptions
	(*GetAggregatedCompanyStatsListRequest)(nil),        // 11: offer_aggregator_service.v1.GetAggregatedCompanyStatsListRequest
	(*GetAggregatedCompanyStatsListResponse)(nil),       // 12: offer_aggregator_service.v1.GetAggregatedCompanyStatsListResponse
	(*SearchAggregatedCompanyStatsListRequest)(nil),     // 13: offer_aggregator_service.v1.SearchAggregatedCompanyStatsListRequest
	(*SearchAggregatedCompanyStatsListResponse)(nil),    // 14: offer_aggregator_service.v1.SearchAggregatedCompanyStatsListResponse
	(*GetCompanyAggregatedOfferStatsListsRequest)(nil),  // 15: offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsRequest
	(*GetCompanyAggregatedOfferStatsListsResponse)(nil), // 16: offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsResponse
}
var file_offer_aggregator_service_v1_api_proto_depIdxs = []int32{
	2,  // 0: offer_aggregator_service.v1.AggregatedOfferStats.company:type_name -> offer_aggregator_service.v1.Company
	3,  // 1: offer_aggregator_service.v1.AggregatedOfferStats.location:type_name -> offer_aggregator_service.v1.Location
	4,  // 2: offer_aggregator_service.v1.AggregatedOfferStats.position:type_name -> offer_aggregator_service.v1.Position
	5,  // 3: offer_aggregator_service.v1.AggregatedOfferStats.minimum_total_package:type_name -> offer_aggregator_service.v1.MonetaryValue
	5,  // 4: offer_aggregator_service.v1.AggregatedOfferStats.maximum_total_package:type_name -> offer_aggregator_service.v1.MonetaryValue
	2,  // 5: offer_aggregator_service.v1.AggregatedCompanyStats.company:type_name -> offer_aggregator_service.v1.Company
	1,  // 6: offer_aggregator_service.v1.GetAggregatedCompanyStatsListRequest.sort_order:type_name -> offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder.Value
	8,  // 7: offer_aggregator_service.v1.GetAggregatedCompanyStatsListResponse.company_stat_list:type_name -> offer_aggregator_service.v1.AggregatedCompanyStats
	10, // 8: offer_aggregator_service.v1.SearchAggregatedCompanyStatsListRequest.filter_options:type_name -> offer_aggregator_service.v1.AggregatedCompanyStatsFilterOptions
	1,  // 9: offer_aggregator_service.v1.SearchAggregatedCompanyStatsListRequest.sort_order:type_name -> offer_aggregator_service.v1.AggregatedCompanyStatsSortOrder.Value
	8,  // 10: offer_aggregator_service.v1.SearchAggregatedCompanyStatsListResponse.company_stat_list:type_name -> offer_aggregator_service.v1.AggregatedCompanyStats
	0,  // 11: offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsRequest.sort_order:type_name -> offer_aggregator_service.v1.CompanyAggregatedOfferStatsSortOrder.Value
	8,  // 12: offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsResponse.offer_stat_list:type_name -> offer_aggregator_service.v1.AggregatedCompanyStats
	11, // 13: offer_aggregator_service.v1.OfferAggregatorService.GetAggregatedCompanyStatsList:input_type -> offer_aggregator_service.v1.GetAggregatedCompanyStatsListRequest
	13, // 14: offer_aggregator_service.v1.OfferAggregatorService.SearchAggregatedCompanyStatsList:input_type -> offer_aggregator_service.v1.SearchAggregatedCompanyStatsListRequest
	15, // 15: offer_aggregator_service.v1.OfferAggregatorService.GetCompanyAggregatedOfferStatsLists:input_type -> offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsRequest
	12, // 16: offer_aggregator_service.v1.OfferAggregatorService.GetAggregatedCompanyStatsList:output_type -> offer_aggregator_service.v1.GetAggregatedCompanyStatsListResponse
	14, // 17: offer_aggregator_service.v1.OfferAggregatorService.SearchAggregatedCompanyStatsList:output_type -> offer_aggregator_service.v1.SearchAggregatedCompanyStatsListResponse
	16, // 18: offer_aggregator_service.v1.OfferAggregatorService.GetCompanyAggregatedOfferStatsLists:output_type -> offer_aggregator_service.v1.GetCompanyAggregatedOfferStatsListsResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_offer_aggregator_service_v1_api_proto_init() }
func file_offer_aggregator_service_v1_api_proto_init() {
	if File_offer_aggregator_service_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offer_aggregator_service_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonetaryValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedOfferStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAggregatedOfferStatsSortOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedCompanyStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedCompanyStatsSortOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedCompanyStatsFilterOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedCompanyStatsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedCompanyStatsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAggregatedCompanyStatsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAggregatedCompanyStatsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAggregatedOfferStatsListsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offer_aggregator_service_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyAggregatedOfferStatsListsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_offer_aggregator_service_v1_api_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetAggregatedCompanyStatsListRequest_CompanyId)(nil),
		(*GetAggregatedCompanyStatsListRequest_CompanyName)(nil),
	}
	file_offer_aggregator_service_v1_api_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GetAggregatedCompanyStatsListResponse_PreviousCompanyId)(nil),
		(*GetAggregatedCompanyStatsListResponse_PreviousCompanyName)(nil),
		(*GetAggregatedCompanyStatsListResponse_NextCompanyId)(nil),
		(*GetAggregatedCompanyStatsListResponse_NextCompanyName)(nil),
	}
	file_offer_aggregator_service_v1_api_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetCompanyAggregatedOfferStatsListsRequest_LocationId)(nil),
		(*GetCompanyAggregatedOfferStatsListsRequest_PositionName)(nil),
	}
	file_offer_aggregator_service_v1_api_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*GetCompanyAggregatedOfferStatsListsResponse_PreviousLocationId)(nil),
		(*GetCompanyAggregatedOfferStatsListsResponse_PreviousPositionId)(nil),
		(*GetCompanyAggregatedOfferStatsListsResponse_NextLocationId)(nil),
		(*GetCompanyAggregatedOfferStatsListsResponse_NextPositionId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offer_aggregator_service_v1_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_offer_aggregator_service_v1_api_proto_goTypes,
		DependencyIndexes: file_offer_aggregator_service_v1_api_proto_depIdxs,
		EnumInfos:         file_offer_aggregator_service_v1_api_proto_enumTypes,
		MessageInfos:      file_offer_aggregator_service_v1_api_proto_msgTypes,
	}.Build()
	File_offer_aggregator_service_v1_api_proto = out.File
	file_offer_aggregator_service_v1_api_proto_rawDesc = nil
	file_offer_aggregator_service_v1_api_proto_goTypes = nil
	file_offer_aggregator_service_v1_api_proto_depIdxs = nil
}
